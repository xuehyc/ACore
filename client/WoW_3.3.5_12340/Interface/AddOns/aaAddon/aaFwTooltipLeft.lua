local _G = _G; local GameTooltip = GameTooltip; local ItemRefTooltip = ItemRefTooltip; local ShoppingTooltip1 = ShoppingTooltip1; local ShoppingTooltip2 = ShoppingTooltip2; local ShoppingTooltip2 = ShoppingTooltip3; aaFwTooltipLeft = {}; aaFwTooltipLeft.selectItem = {}; aaFwTooltipLeft.mainView = {}; aaFwTooltipLeft.fwbtns = {}; aaFwTooltipLeft.fwtexts = {}; aaFwTooltipLeft.fwzhtexts = {}; local fontSize = 14; local left = 10; local top = -10; local space = 50; local fwtextspace = fontSize+5; local menuSize = 50; local textHeight = 15; local buttonSize = 30; local fwheight = 0; local fwwidth = 0; local IconView = function(x,y,icon,text) local menuView = CreateFrame("Frame",nil,aaFwTooltipLeft.mainView) do menuView:SetFrameStrata("TOOLTIP"); menuView:SetWidth(menuSize); menuView:SetHeight(menuSize); menuView:SetPoint("TOPLEFT",aaFwTooltipLeft.mainView,'TOPLEFT',x,y); menuView:Hide(); end; menuView.IconText = menuView:CreateFontString("menuView.IconText", "OVERLAY", "GameFontNormal") do menuView.IconText:SetPoint("TOPLEFT", menuView, "TOPLEFT", 0, -buttonSize); menuView.IconText:SetFont("Interface\\AddOns\\aaAddon\\Font\\aaFont.TTF", fontSize); menuView.IconText:SetWidth(menuSize); menuView.IconText:SetHeight(fontSize); menuView.IconText:SetSpacing(0); menuView.IconText:SetText(text); end; menuView.IconButton = CreateFrame('Button', nil, menuView, '') do menuView.IconButton:SetPoint('CENTER', menuView, 'CENTER', 0, (menuSize-buttonSize)/2+2); menuView.IconButton:SetNormalTexture(icon); menuView.IconButton:SetWidth(buttonSize); menuView.IconButton:SetHeight(buttonSize); end; return menuView; end; local FwText = function(x,y,text) local fwtext = aaFwTooltipLeft.mainView:CreateFontString("fwtext", "OVERLAY", "GameFontNormal") do fwtext:SetText(text); fwtext:SetFont("Interface\\AddOns\\aaAddon\\Font\\aaFont.TTF", fontSize); fwtext:SetPoint("TOPLEFT", aaFwTooltipLeft.mainView, "TOPLEFT", x, y); end; return fwtext; end; aaFwTooltipLeft.mainView = CreateFrame("Frame",nil,UIParent) do aaFwTooltipLeft.mainView:SetFrameStrata("TOOLTIP"); aaFwTooltipLeft.mainView:SetBackdrop({ bgFile = 'Interface\\DialogFrame\\UI-DialogBox-Background', edgeFile = 'Interface\\Tooltips\\UI-Tooltip-Border', tile = true, edgeSize = 16, tileSize = 16, insets = { left = 4, right = 4, top = 4, bottom = 4 } }); aaFwTooltipLeft.mainView:SetWidth(470); aaFwTooltipLeft.mainView:SetHeight(365); aaFwTooltipLeft.mainView:SetToplevel(true); aaFwTooltipLeft.mainView:SetClampedToScreen(true); aaFwTooltipLeft.mainView:Hide(); aaFwTooltipLeft.mainView.fwtitleText = FwText(left,top,aaData.color_yellow.."[神符之语]"..""); end; function aaFwTooltipLeft:reload() fwheight = 0; fwwidth = 0; if aaFwTooltipLeft.mainView.fwzuheText then aaFwTooltipLeft.mainView.fwzuheText:Hide(); aaFwTooltipLeft.mainView.fwzuheText = nil; end; for i=1,30 do if aaFwTooltipLeft.fwbtns[i] then aaFwTooltipLeft.fwbtns[i]:Hide(); aaFwTooltipLeft.fwbtns[i] = nil; end; if aaFwTooltipLeft.fwtexts[i] then aaFwTooltipLeft.fwtexts[i]:Hide(); aaFwTooltipLeft.fwtexts[i] = nil; end; if aaFwTooltipLeft.fwzhtexts[i] then aaFwTooltipLeft.fwzhtexts[i]:Hide(); aaFwTooltipLeft.fwzhtexts[i] = nil; end; end; if aaFwTooltipLeft.selectItem ~= nil and aaFwTooltipLeft.selectItem ~= {} then local itemCount = aaFwTooltipLeft.selectItem[32] + 0; local fwCount = 0; local fwzhCount = 0; local fwids = aaData:toVectorInt(aaFwTooltipLeft.selectItem[33]); if itemCount > 0 then local jj = 0; for j=1,itemCount do local itementry = 0; if fwids[j] then itementry = fwids[j]+0; end; if itementry > 0 then fwCount = fwCount + 1; end; end; end; local w = space * fwCount; if fwwidth < w then fwwidth = w; end; local count_n = 0; local count_n_zh = 0; if fwCount > 0 then local jj = 0; for j=1,fwCount do local itementry = 0; if fwids[j] then itementry = fwids[j]+0; end; local icon = ""; local name = ""; if itementry > 0 then jj = jj + 1; name = aaData:getItemName(itementry); icon = GetItemIcon(itementry); local spelltext = aa_fw[itementry]; aaFwTooltipLeft.fwtexts[j] = FwText(left,top-fontSize-10-menuSize-fwtextspace*(jj-1) - count_n * 14,spelltext); for word in string.gmatch(spelltext, "|n") do count_n = count_n + 1; end; local w = aaFwTooltipLeft.fwtexts[j]:GetStringWidth(); if fwwidth < w then fwwidth = w; end; end; aaFwTooltipLeft.fwbtns[j] = IconView(left + space * (j-1),top-fontSize-10,icon,name); end; local fwzhidstr = aaFwTooltipLeft.selectItem[34]; local fwzhids = {}; string.gsub(fwzhidstr,'[^'..","..']+',function (w) table.insert(fwzhids,w); end); for i=1,#fwzhids do local fwzhid = fwzhids[i] + 0; if fwzhid > 0 then local spelltext = aa_fwzh[fwzhid][1]; aaFwTooltipLeft.fwzhtexts[i] = FwText(left,top-fontSize-10-menuSize-10-fwtextspace*(fwCount+i) - (count_n +count_n_zh) * 14,spelltext); for word in string.gmatch(spelltext, "|n") do count_n_zh = count_n_zh + 1; end; local w = aaFwTooltipLeft.fwzhtexts[i]:GetStringWidth(); if fwwidth < w then fwwidth = w; end; fwzhCount = fwzhCount + 1; end; end; end; if fwCount == 0 then fwheight = -top+fontSize+10+menuSize; aaFwTooltipLeft.mainView:Hide(); else fwheight = -top+fontSize+10+menuSize + fwtextspace*fwCount + 10 + (count_n + count_n_zh) * 14; aaFwTooltipLeft.mainView:Show(); end; if fwzhCount > 0 then aaFwTooltipLeft.mainView.fwzuheText = FwText(left,top-fontSize-10-menuSize-10-fwtextspace*fwCount - count_n * 14,aaData.color_yellow.."[组合效果]"..""); local w = aaFwTooltipLeft.mainView.fwzuheText:GetStringWidth(); if fwwidth < w then fwwidth = w; end; fwheight = fwheight + 10 + fwtextspace*(fwzhCount+1); end; aaFwTooltipLeft.mainView:SetHeight(fwheight); aaFwTooltipLeft.mainView:SetWidth(fwwidth+left*2); end; end; function aaFwTooltipLeft:show(item) aaFwTooltipLeft.selectItem = item; aaFwTooltipLeft:reload(); for i=1,#(aaFwTooltipLeft.fwbtns) do local view = aaFwTooltipLeft.fwbtns[i]; if view ~= nil then view:Show(); end; end; end; function aaFwTooltipLeft:hide() if aaFwTooltipLeft.mainView and aaFwTooltipLeft.mainView ~= nil and aaFwTooltipLeft.mainView ~= {} then aaFwTooltipLeft.mainView:Hide(); aaFwTooltipLeft.selectItemId = 0; end; end;